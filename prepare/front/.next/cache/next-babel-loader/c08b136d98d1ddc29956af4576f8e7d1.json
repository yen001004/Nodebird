{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = () => {\n  const createSagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/SM/Desktop/예옹/여름방학/Nodebird/prepare/front/store/configureStore.js"],"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","middlewares","sagaMiddleware","loggerMiddleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMH,oBAAoB,GAAGA,oBAAoB,EAAjD;AACA,QAAMI,WAAW,GAAG,CAACC,cAAD,EAAiBC,gBAAjB,CAApB;AACA,QAAMC,QAAQ,GAAG,QACXT,OAAO,CAACF,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CADI,GAEXL,mBAAmB,CAACH,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAFzB;AAGA,QAAMI,KAAK,GAAGX,WAAW,CAACI,OAAD,EAAUM,QAAV,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBR,QAAnB,CAAjB;AACA,SAAOM,KAAP;AACH,CATD;;AAWA,MAAMG,OAAO,GAAGhB,aAAa,CAACQ,cAAD,EAAiB;AAC1CS,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst configureStore = () => {\r\n    const createSagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}