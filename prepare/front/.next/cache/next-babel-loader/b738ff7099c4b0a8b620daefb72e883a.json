{"ast":null,"code":"import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS' // data: result.data\n\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/SM/Desktop/예옹/여름방학/Nodebird/prepare/front/sagas/user.js"],"names":["all","delay","fork","put","takeLatest","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACpB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACH;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACpB,MAAI;AACA;AACA,UAAMT,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFP,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOK,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,gBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,SAASO,SAAT,GAAqB;AACjB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACH;;AAED,UAAUO,MAAV,GAAmB;AACf,MAAI;AACA;AACA,UAAMd,KAAK,CAAC,IAAD,CAAX;AACA,UAAME,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA,CAEN;;AAFM,KAAD,CAAT;AAIH,GAPD,CAOE,OAAOC,GAAP,EAAY;AACV,UAAMT,GAAG,CAAC;AACNQ,MAAAA,IAAI,EAAE,iBADA;AAENJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUS,UAAV,GAAuB;AACnB,QAAMZ,UAAU,CAAC,gBAAD,EAAmBK,KAAnB,CAAhB;AACH;;AAED,UAAUQ,WAAV,GAAwB;AACpB,QAAMb,UAAU,CAAC,iBAAD,EAAoBW,MAApB,CAAhB;AACH;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAMlB,GAAG,CAAC,CACNE,IAAI,CAACc,UAAD,CADE,EAENd,IAAI,CAACe,WAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, delay, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        // const result = yield call(logInAPI, action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_IN_SUCCESS',\r\n            data: action.data,\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_IN_FAILURE',\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000);\r\n        yield put({\r\n            type: 'LOG_OUT_SUCCESS',\r\n            // data: result.data\r\n        });\r\n    } catch (err) {\r\n        yield put({\r\n            type: 'LOG_OUT_FAILURE',\r\n            data: err.response.data,\r\n        });\r\n    }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest('LOG_OUT_REQUEST', logOut);\r\n}\r\n\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}